{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d598e026.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n\treturn (\r\n\t\t<button\r\n\t\t\tonClick={onClick}\r\n\t\t\tstyle={{ backgroundColor: color }}\r\n\t\t\tclassName=\"btn\"\r\n\t\t>\r\n\t\t\t{text}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nButton.defaultProps = {\r\n\tcolor: \"steelblue\",\r\n};\r\n\r\nButton.propTypes = {\r\n\ttext: PropTypes.string,\r\n\tcolor: PropTypes.string,\r\n\tonClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import PropTypes from \"prop-types\";\r\nimport Button from \"./Button\";\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n\treturn (\r\n\t\t<header className=\"header\">\r\n\t\t\t<h1>{title}</h1>\r\n\t\t\t<Button\r\n\t\t\t\tcolor={showAdd ? \"red\" : \"green\"}\r\n\t\t\t\ttext={showAdd ? \"Close\" : \"Add\"}\r\n\t\t\t\tonClick={onAdd}\r\n\t\t\t/>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nHeader.defaultProps = {\r\n\ttitle: \"Task Tracker\",\r\n};\r\n\r\nHeader.propTypes = {\r\n\ttitle: PropTypes.string.isRequired,\r\n};\r\n\r\n// CSS in JS\r\n// const headingStyle = {\r\n//     color: 'red',\r\n//     backgroundColor: 'black'\r\n// }\r\n\r\nexport default Header;\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n\treturn (\r\n    <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n      <h3>{task.text}{' '} \r\n        <FaTimes \r\n          style={{ color: 'red', cursor: 'pointer' }} \r\n          onClick={() => onDelete(task.id)} \r\n        />\r\n      </h3>\r\n        <p>{task.day}</p>\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default Task;\r\n","import Task from \"./Task\";\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{tasks.map((task) => (\r\n\t\t\t\t<Task\r\n\t\t\t\t\tkey={task.id}\r\n\t\t\t\t\ttask={task}\r\n\t\t\t\t\tonDelete={onDelete}\r\n\t\t\t\t\tonToggle={onToggle}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Tasks;\r\n","import { useState } from 'react' \r\n\r\nconst AddTask = ({ onAdd }) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!text) {\r\n          alert('Please add a task')\r\n          return\r\n        }\r\n\r\n        onAdd({ text, day, reminder })\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n              <label>Task</label>\r\n              <input \r\n                type=\"text\" \r\n                placeholder=\"Add Task\" \r\n                value={text} \r\n                onChange={(e) => setText(e.target.value)} \r\n              />\r\n            </div>\r\n            <div className='form-control'>\r\n              <label>Day and Time</label>\r\n              <input \r\n                type=\"text\" \r\n                placeholder=\"Add Day and Time\" value={day} \r\n                onChange={(e) => setDay(e.target.value)} />\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n              <label>Set Reminder</label>\r\n              <input \r\n                type=\"checkbox\" \r\n                checked={reminder}\r\n                value={reminder} \r\n                onChange={(e) => setReminder(e.currentTarget.checked)} />\r\n            </div>\r\n\r\n            <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask","import { useState } from \"react\";\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([\n\t\t{\n\t\t\tid: 1,\n\t\t\ttext: \"Doctors Appointment\",\n\t\t\tday: \"Feb 5th at 2:30pm\",\n\t\t\treminder: true,\n\t\t},\n\t\t{\n\t\t\tid: 2,\n\t\t\ttext: \"Meeting at School\",\n\t\t\tday: \"Feb 6th at 1:30pm\",\n\t\t\treminder: true,\n\t\t},\n\t\t{\n\t\t\tid: 3,\n\t\t\ttext: \"Food Shopping\",\n\t\t\tday: \"Feb 5th at 2:30pm\",\n\t\t\treminder: false,\n\t\t},\n\t]);\n\n  // Add Task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = { id, ...task }\n    setTasks([...tasks, newTask])\n  }\n\n  // Delete Task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  // Toggle Reminder\n  const toggleReminder = (id) => {\n    setTasks(tasks.map((task) => task.id === id ? { ...task, reminder: !task.reminder } : task))\n  }\n\n\treturn (\n    <div className=\"container\">\n      <Header \n        onAdd={() => setShowAddTask\n        (!showAddTask)} \n        showAdd={showAddTask} \n      />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? ( \n      <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n       ) : (\n         'No Tasks to Show'\n       )}\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}